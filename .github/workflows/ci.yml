name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Lint (using .deno.jsonc config)
        run: deno lint --config=.deno.jsonc .

      - name: Run Deno tests (skip if none)
        shell: bash
        run: |
          set -e
          if git ls-files '**/*.test.ts' '**/*.test.tsx' '**/*.test.mts' '**/*.test.cts' \
                          '**/*.test.js' '**/*.test.jsx' | grep -q .; then
            echo "üß™ Tests found. Running deno test‚Ä¶"
            deno test -A --config=.deno.jsonc
          else
            echo "‚ö†Ô∏è No tests found, skipping deno test."
          fi

  deploy-vercel:
    needs: build-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel (only if secrets exist)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        shell: bash
        run: |
          if [[ -n "$VERCEL_TOKEN" && -n "$VERCEL_ORG_ID" && -n "$VERCEL_PROJECT_ID" ]]; then
            npm i -g vercel
            vercel pull --yes --environment=production --token="$VERCEL_TOKEN"
            vercel build --prod --token="$VERCEL_TOKEN"
            vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN"
          else
            echo "üîí Vercel secrets not configured; skipping deploy."
            echo "Set VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID in repo Secrets."
          fi
